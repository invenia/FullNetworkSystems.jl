var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = FullNetworkSystems","category":"page"},{"location":"#FullNetworkSystems","page":"Home","title":"FullNetworkSystems","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for FullNetworkSystems.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [FullNetworkSystems]","category":"page"},{"location":"#FullNetworkSystems.Branch","page":"Home","title":"FullNetworkSystems.Branch","text":"Constructors for a Branch.  The user has the option to define a Branch as a line e.g.\n\nline1 = Branch(\"1\", \"A\", \"B\", 10.0, 10.0, true, (100.0, 102.0), (5.0, 6.0), 1.0, 1.0)\n\nwhere the final two values (resistance and reactance) can be left unspecified.  Or the user can define a Branch` as a transformer:\n\ntrnasformer1 = Branch(\n    \"4\", \"A\", \"C\", 10.0, 10.0, true, (100.0, 102.0), (5.0, 6.0), 1.0, 1.0, 0.5, 30.0\n)\n\nwhere two extra parameters are provided as the end representing tap and angle.\n\n\n\n\n\n","category":"type"},{"location":"#FullNetworkSystems.Branch-2","page":"Home","title":"FullNetworkSystems.Branch","text":"struct Branch\n\nType for static branch attributes.  Branches may have between 0 and 2 break points which is why the break_points and penalties fields contain variable length Tuples.\n\nFields:\n\nname::String31\nBranch long name\nto_bus::String15\nName of the bus the branch goes to\nfrom_bus::String15\nName of the bus the branch goes from\nrate_a::Float64\nPower flow limit for the base case (pu)\nrate_b::Float64\nPower flow limit for contingency scenario (pu)\nis_monitored::Bool\nBoolean defining whether the branch is monitored\nbreak_points::Tuple{Float64, Float64}\nBreak points of the branch. Branches can have 0, 1, or 2 break points. Zeros indicate no break point\n\npenalties::Tuple{Float64, Float64}\nPrice penalties for each of the break points of the branch ($)\nresistance::Float64\nResistance of the branch (pu)\nreactance::Float64\nReactance of the branch (pu)\nis_transformer::Bool\nBoolean indicating whether the branch is a transformer\ntap::Union{Missing, Float64}\nRatio between the nominal winding one and two voltages of the transformer\nangle::Union{Missing, Float64}\nPhase shift angle (radians)\n\n\n\n\n\n","category":"type"},{"location":"#FullNetworkSystems.Bus","page":"Home","title":"FullNetworkSystems.Bus","text":"struct Bus\n\nType for static bus attributes.\n\nFields:\n\nname::String15\nBus name\nbase_voltage::Float64\nBase voltage (kV)\n\n\n\n\n\n","category":"type"},{"location":"#FullNetworkSystems.Generator","page":"Home","title":"FullNetworkSystems.Generator","text":"struct Generator\n\nType for static generator attribute (i.e. things that describe a generator that are not time series data).  Parameters given in pu assume a base power of 100MW.\n\nFields:\n\nunit_code::Int64\nGenerator id/unit code\nzone::Int64\nNumber of the zone the generator is located in\nstartup_cost::Float64\nCost of turning on the generator ($)\nshutdown_cost::Float64\nCost of turning off the generator ($)\nno_load_cost::Float64\nCost of the generator being on but not producing any MW ($ /hour)\nmin_uptime::Float64\nMinimum time the generator has to be committed for (hours)\nmin_downtime::Float64\nMinimum time the generator has to be off for (hours)\nramp_up::Float64\nRate at which the generator can increase generation (pu/minute)\nramp_down::Float64\nRate at which the generator can decrease generation (pu/minute)\ntechnology::Symbol\nSymbol describing the technology of the generator\n\n\n\n\n\n","category":"type"},{"location":"#FullNetworkSystems.GeneratorStatus","page":"Home","title":"FullNetworkSystems.GeneratorStatus","text":"abstract type GeneratorStatus\n\nAbstract type for storing time series of generator status information.\n\n\n\n\n\n","category":"type"},{"location":"#FullNetworkSystems.GeneratorStatusDA","page":"Home","title":"FullNetworkSystems.GeneratorStatusDA","text":"struct GeneratorStatusDA <: GeneratorStatus\n\nGenerator status time series data needed for the day-ahead formulation.\n\nFields:\n\nhours_at_status::KeyedArray{Float64, 1}\nHours each generator has been at its current commitment status at the start of the day\navailability::KeyedArray{Bool, 2}\nFlag indicating if the generator is available to be committed in each hour\nmust_run::KeyedArray{Bool, 2}\nFlag indicating if the generator must be committed in each hour\n\n\n\n\n\n","category":"type"},{"location":"#FullNetworkSystems.GeneratorStatusRT","page":"Home","title":"FullNetworkSystems.GeneratorStatusRT","text":"struct GeneratorStatusRT <: GeneratorStatus\n\nGenerator status time series data needed for the real-time formulation.\n\nFields:\n\ncommitment::KeyedArray{Bool, 2}\nGenerator commitment status indicated by a Bool\nregulation_commitment::KeyedArray{Bool, 2}\nGenerator regulation commitment status indicated by a Bool\n\n\n\n\n\n","category":"type"},{"location":"#FullNetworkSystems.GeneratorTimeSeries","page":"Home","title":"FullNetworkSystems.GeneratorTimeSeries","text":"struct GeneratorTimeSeries\n\nGenerator related time series data that is needed for both the day-ahead and real-time formulations. Values given in pu assume a base power of 100MW.\n\nFields:\n\ninitial_generation::KeyedArray{Float64, 1}\nGeneration of the generator at the start of the time period (pu)\noffer_curve::KeyedArray{Vector{Tuple{Float64, Float64}}, 2}\nGenerator offer curves. KeyedArray where the axis keys are generator names x datetimes\nregulation_min::KeyedArray{Float64, 2}\nGenerator minimum output in the ancillary services market (pu)\nregulation_max::KeyedArray{Float64, 2}\nGenerator maximum output in the ancillary services market (pu)\npmin::KeyedArray{Float64, 2}\nGenerator minimum output (pu)\npmax::KeyedArray{Float64, 2}\nGenerator maximum output (pu)\nregulation_offers::KeyedArray{Union{Missing, Float64}, 2}\nAncillary services regulation reserve offer prices ($ /pu). Generators not providing the service will have missing offer data.\n\nspinning_offers::KeyedArray{Union{Missing, Float64}, 2}\nAncillary services spinning reserve offer prices ($ /pu). Generators not providing the service will have missing offer data.\n\non_supplemental_offers::KeyedArray{Union{Missing, Float64}, 2}\nAncillary services online supplemental reserve offer prices ($ /pu). Generators not providing the service will have missing offer data.\n\noff_supplemental_offers::KeyedArray{Union{Missing, Float64}, 2}\nAncillary services offline supplemental reserve offer prices ($ /pu). Generators not providing the service will have missing offer data.\n\n\n\n\n\n","category":"type"},{"location":"#FullNetworkSystems.System","page":"Home","title":"FullNetworkSystems.System","text":"System\n\nThe abstract type for representing the whole power system including topology, static components and their attributes, and time series data.\n\nTopology: Dictionaries linking generators, loads, and bids (if present) to buses. System wide static components and grid matrices: zones, buses, generators, branches, LODF and PTDF. Time series data: all the time series associated with generators, loads and bids.  All stored as KeyedArrays of ids x datetimes.\n\n\n\n\n\n","category":"type"},{"location":"#FullNetworkSystems.SystemDA","page":"Home","title":"FullNetworkSystems.SystemDA","text":"mutable struct SystemDA <: System\n\nSubtype of a System for modelling the day-ahead market.\n\nFields:\n\ngens_per_bus::Dictionaries.Dictionary{String15, Vector{Int64}}\nDictionary where the keys are bus names and the values are generator ids at that bus\nincs_per_bus::Dictionaries.Dictionary{String15, Vector{String31}}\nDictionary where the keys are bus names and the values are increment bid ids at that bus\ndecs_per_bus::Dictionaries.Dictionary{String15, Vector{String31}}\nDictionary where the keys are bus names and the values are decrement bid ids at that bus\npsls_per_bus::Dictionaries.Dictionary{String15, Vector{String31}}\nDictionary where the keys are bus names and the values are price sensitive load bid ids at that bus\n\nloads_per_bus::Dictionaries.Dictionary{String15, Vector{String31}}\nDictionary where the keys are bus names and the values are load ids at that bus\nzones::Dictionaries.Dictionary{Int64, Zone}\nZones in the System, which will also include a Zone entry for the market wide zone\nbuses::Dictionaries.Dictionary{String15, Bus}\nBuses in the System indexed by bus name\ngenerators::Dictionaries.Dictionary{Int64, Generator}\nGenerators in the System indexed by unit code\nbranches::Dictionaries.Dictionary{String31, Branch}\nBranches in the System indexed by branch name\nlodfs::Dictionaries.Dictionary{String, KeyedArray{Float64, 2}}\nThe line outage distribution factor matrix of the system for a set of contingencies given by the keys of the Dictionary. Each entry is a KeyedArray with axis keys branch names x branch on outage\n\nptdf::Union{Missing, KeyedArray{Float64, 2}}\nPower transfer distribution factor of the system.  KeyedArray where the axis keys are branch names x bus names\n\ngenerator_time_series::GeneratorTimeSeries\nGenerator related time series data\ngenerator_status::GeneratorStatusDA\nGenerator status time series needed for the day-ahead formulation\nloads::KeyedArray{Float64, 2}\nLoad time series data. KeyedArray where the axis keys are load ids x datetimes\nincrements::KeyedArray{Vector{Tuple{Float64, Float64}}, 2}\nIncrement bids time series data. KeyedArray where the axis keys are bid ids x datetimes\ndecrements::KeyedArray{Vector{Tuple{Float64, Float64}}, 2}\nDecrement bids time series data. KeyedArray where the axis keys are bid ids x datetimes\nprice_sensitive_loads::KeyedArray{Vector{Tuple{Float64, Float64}}, 2}\nPrice sensitive load bids time series data. KeyedArray where the axis keys are bid ids x datetimes\n\n\n\n\n\n","category":"type"},{"location":"#FullNetworkSystems.SystemRT","page":"Home","title":"FullNetworkSystems.SystemRT","text":"mutable struct SystemRT <: System\n\nSubtype of a System for modelling the real-time market.\n\nFields:\n\ngens_per_bus::Dictionaries.Dictionary{String15, Vector{Int64}}\nDictionary where the keys are bus names and the values are generator ids at that bus\nloads_per_bus::Dictionaries.Dictionary{String15, Vector{String31}}\nDictionary where the keys are bus names and the values are load ids at that bus\nzones::Dictionaries.Dictionary{Int64, Zone}\nZones in the System, which will also include a Zone entry for the market wide zone\nbuses::Dictionaries.Dictionary{String15, Bus}\nBuses in the System indexed by bus name\ngenerators::Dictionaries.Dictionary{Int64, Generator}\nGenerators in the System indexed by unit code\nbranches::Dictionaries.Dictionary{String31, Branch}\nBranches in the System indexed by branch name\nlodfs::Dictionaries.Dictionary{String, KeyedArray{Float64, 2}}\nThe line outage distribution factor matrix of the system for a set of contingencies given by the keys of the Dictionary. Each entry is a KeyedArray with axis keys branch names x branch on outage\n\nptdf::Union{Missing, KeyedArray{Float64, 2}}\nPower transfer distribution factor of the system.  KeyedArray where the axis keys are branch names x bus names\n\ngenerator_time_series::GeneratorTimeSeries\nGenerator related time series data\ngenerator_status::GeneratorStatusRT\nGenerator status time series needed for the real-time formulation\nloads::KeyedArray{Float64, 2}\nLoad time series data. KeyedArray where the axis keys are load ids x datetimes\n\n\n\n\n\n","category":"type"},{"location":"#FullNetworkSystems.Zone","page":"Home","title":"FullNetworkSystems.Zone","text":"struct Zone\n\nType defining a market zone.  The Zone is identified by a number.  The other fields contain the service requirements for the zone.  Requirements are given in pu assuming a base power of 100MW.\n\nFields:\n\nnumber::Int64\nZone number\nregulation::Float64\nZonal regulation requirement (pu)\noperating_reserve::Float64\nZonal operating reserve requirement (regulation + spinning + supplemental) (pu)\ngood_utility::Float64\nZonal good utility practice requirement (regulation + spinning) (pu)\n\n\n\n\n\n","category":"type"},{"location":"#FullNetworkSystems._correct_lodf!-Tuple{KeyedArray, Any}","page":"Home","title":"FullNetworkSystems._correct_lodf!","text":"_correct_lodf!(lodf_matrix::KeyedArray, br)\n\nSets the LODF row corresponding to branch br to zero, except for the element (br, br), which is set to -1. This is to ensure the post-contingency flow on a line that is going out and is also monitored is set to zero.\n\n\n\n\n\n","category":"method"},{"location":"#FullNetworkSystems._incidence-Tuple{Any, Any}","page":"Home","title":"FullNetworkSystems._incidence","text":"_incidence(buses, branches) -> SparseMatrix\n\nReturns the sparse edge-node incidence matrix related to the buses and branches used as inputs. Matrix axes correspond to (keys(branches), keys(buses))\n\n\n\n\n\n","category":"method"},{"location":"#FullNetworkSystems._series_susceptance-Tuple{Any}","page":"Home","title":"FullNetworkSystems._series_susceptance","text":"_series_susceptance(branches) -> Vector{Float64}\n\nCalculates the susceptance of the elements in the branch Dictionary The calculation is different depending if the element is a line (no tap) or transformer (tap present).\n\n\n\n\n\n","category":"method"},{"location":"#FullNetworkSystems.big_mat_inv-Tuple{AbstractMatrix}","page":"Home","title":"FullNetworkSystems.big_mat_inv","text":"big_mat_inv(mat::AbstractMatrix; block_size::Int=13_000) -> AbstractMatrix\n\nReceives a matrix that is supposed to be inverted. If the size of the matrix is larger than the defined block_size, it first partitions the matrix into smaller blocks until the matrices that are supposed to be inverted have size less than block_size. The partitioned matrix would look like: mat = [A B; C D] where the size of A is guaranteed to be smaller than the block_size. If matrix D is larger than block_size, it gets partitioned D = [A1 B1;C1 D1] and this process continues until all Ais and Dis are smaller than block_size.\n\nThe default block_size is set to be 13_000 as we have empirically observed that, for matrices smaller than this size, the built-in inv can efficiently handle the inversion. This was set when doing the calculation of admittance matrix inverse in MISO and depending on the application, this number can be adjusted.\n\nStaring from the right bottom corner of the partitioned matrix, we use block inversion matrix lemma (https://en.wikipedia.org/wiki/Block_matrix) iteratively until the full matrix inversion is computed.\n\n\n\n\n\n","category":"method"},{"location":"#FullNetworkSystems.branches_by_breakpoints-Tuple{System}","page":"Home","title":"FullNetworkSystems.branches_by_breakpoints","text":"branches_by_breakpoints(system::System) -> NTuple{3, Vector{String31}}\n\nReturns three vectors containing of the names of branches which have 0, 1, and 2 breakpoints.\n\n\n\n\n\n","category":"method"},{"location":"#FullNetworkSystems.compute_lodf-Tuple{System, Any}","page":"Home","title":"FullNetworkSystems.compute_lodf","text":"compute_lodf(system, branch_names_out) -> KeyedArray\ncompute_lodf(system::System, ptdf_matrix, branch_names_out) -> KeyedArray\ncompute_lodf(buses, branches, ptdf, branch_names_out) -> KeyedArray\n\nReturns the M*O DC-Line Outage Distribution Factor (DC-LODF) matrix of the network.\n\nImportant Note: In the current implementation, we use lodf only if the contingency scenario does not have any line coming in service. We can also use this function if we want to ignore the lines coming in service.\n\nInputs\n\nbuses::Buses\nbranches::Branches\nptdf_matrix: The pre-calculated PTDF matrix of the system\nbranch_names_out: The names of the branches that are going out in the contingency scenario.\n\nOutput\n\nThe LODF matrix as a KeyedArray. The axes are the branch names and branch_names_out.\n\nnote: Note\nThe resulting LODF matrix is sensitive to the input PTDF matrix. Using a thresholded PTDF as input might lead to imprecisions in constrast to using the full PTDF.\n\n\n\n\n\n","category":"method"},{"location":"#FullNetworkSystems.compute_ptdf-Tuple{System}","page":"Home","title":"FullNetworkSystems.compute_ptdf","text":"compute_ptdf(system::System; block_size, reference_bus_index) -> KeyedArray\ncompute_ptdf(buses::Buses, branches::Branches; block_size, reference_bus_index) -> KeyedArray\n\nTakes a system, or data for that system, representing a M branch, N bus grid and returns the M * N DC-Power Transfer Distribution Factor (DC-PTDF) matrix of the network.\n\nFor a ~15,000 bus system with aggregated borders, this is expected to take ~1 minute.\n\nKeywords\n\nblock_size=13_000: Block size to be used when partitioning a big matrix for inversion.\nreference_bus=first(keys(buses)): The name of the reference bus.\n\nOutput\n\n::KeyedArray: The PTDF matrix; the axes contain the branch and bus names.\n\nnote: Note\nThe input data must have no isolated components or islands.\n\n\n\n\n\n","category":"method"},{"location":"#FullNetworkSystems.gens_per_zone-Tuple{System}","page":"Home","title":"FullNetworkSystems.gens_per_zone","text":"gens_per_zone(system::System)\n\nReturns a Dict with keys of Zone numbers and values of generator names in that zone.\n\n\n\n\n\n","category":"method"},{"location":"#FullNetworkSystems.get_availability-Tuple{SystemDA}","page":"Home","title":"FullNetworkSystems.get_availability","text":"Returns time series data of flags indicating if the generator is available to be committed in each hour\n\n\n\n\n\n","category":"method"},{"location":"#FullNetworkSystems.get_branches-Tuple{System}","page":"Home","title":"FullNetworkSystems.get_branches","text":"Returns a Dictionary of Branch objects in the System indexed by branch name.\n\n\n\n\n\n","category":"method"},{"location":"#FullNetworkSystems.get_buses-Tuple{System}","page":"Home","title":"FullNetworkSystems.get_buses","text":"Returns a Dictionary of Bus objects in the System indexed by bus name.\n\n\n\n\n\n","category":"method"},{"location":"#FullNetworkSystems.get_commitment-Tuple{SystemRT}","page":"Home","title":"FullNetworkSystems.get_commitment","text":"Returns time series data of generator commitment status in each hour\n\n\n\n\n\n","category":"method"},{"location":"#FullNetworkSystems.get_datetimes-Tuple{System}","page":"Home","title":"FullNetworkSystems.get_datetimes","text":"get_datetimes(system)\n\nExtract datetimes from a System.\n\n\n\n\n\n","category":"method"},{"location":"#FullNetworkSystems.get_decrements-Tuple{SystemDA}","page":"Home","title":"FullNetworkSystems.get_decrements","text":"Returns time series data of decrement bids.\n\n\n\n\n\n","category":"method"},{"location":"#FullNetworkSystems.get_decs_per_bus-Tuple{SystemDA}","page":"Home","title":"FullNetworkSystems.get_decs_per_bus","text":"Returns a Dictionary of decrement bids at each bus.\n\n\n\n\n\n","category":"method"},{"location":"#FullNetworkSystems.get_generators-Tuple{System}","page":"Home","title":"FullNetworkSystems.get_generators","text":"Returns a Dictionary of Generator objects in the System indexed by unit code.\n\n\n\n\n\n","category":"method"},{"location":"#FullNetworkSystems.get_gens_per_bus-Tuple{System}","page":"Home","title":"FullNetworkSystems.get_gens_per_bus","text":"Returns a Dictionary of unit codes at each bus.\n\n\n\n\n\n","category":"method"},{"location":"#FullNetworkSystems.get_good_utility_requirements-Tuple{System}","page":"Home","title":"FullNetworkSystems.get_good_utility_requirements","text":"Returns a Dictionary with zonal good utility practice requirements indexed by zone number.\n\n\n\n\n\n","category":"method"},{"location":"#FullNetworkSystems.get_increments-Tuple{SystemDA}","page":"Home","title":"FullNetworkSystems.get_increments","text":"Returns time series data of increment bids.\n\n\n\n\n\n","category":"method"},{"location":"#FullNetworkSystems.get_incs_per_bus-Tuple{SystemDA}","page":"Home","title":"FullNetworkSystems.get_incs_per_bus","text":"Returns a Dictionary of increment bids at each bus.\n\n\n\n\n\n","category":"method"},{"location":"#FullNetworkSystems.get_initial_commitment-Tuple{SystemDA}","page":"Home","title":"FullNetworkSystems.get_initial_commitment","text":"Returns a flag indicating whether each generator was on at the start of the day.\n\n\n\n\n\n","category":"method"},{"location":"#FullNetworkSystems.get_initial_downtime-Tuple{SystemDA}","page":"Home","title":"FullNetworkSystems.get_initial_downtime","text":"Returns the number of hours each generator was off at the start of the day.\n\n\n\n\n\n","category":"method"},{"location":"#FullNetworkSystems.get_initial_generation-Tuple{System}","page":"Home","title":"FullNetworkSystems.get_initial_generation","text":"Returns the generation of the generator at the start of the time period (pu)\n\n\n\n\n\n","category":"method"},{"location":"#FullNetworkSystems.get_initial_uptime-Tuple{SystemDA}","page":"Home","title":"FullNetworkSystems.get_initial_uptime","text":"Returns the number of hours each generator was on at the start of the day.\n\n\n\n\n\n","category":"method"},{"location":"#FullNetworkSystems.get_lines-Tuple{System}","page":"Home","title":"FullNetworkSystems.get_lines","text":"Returns a Dictionary of branches that are not transformers in the System indexed by name.\n\n\n\n\n\n","category":"method"},{"location":"#FullNetworkSystems.get_loads-Tuple{System}","page":"Home","title":"FullNetworkSystems.get_loads","text":"Returns time series data of the fixed loads in the system\n\n\n\n\n\n","category":"method"},{"location":"#FullNetworkSystems.get_loads_per_bus-Tuple{System}","page":"Home","title":"FullNetworkSystems.get_loads_per_bus","text":"Returns a Dictionary of load names at each bus.\n\n\n\n\n\n","category":"method"},{"location":"#FullNetworkSystems.get_lodfs-Tuple{System}","page":"Home","title":"FullNetworkSystems.get_lodfs","text":"Returns a Dictionary of the line outage distribution factor matrices for the System indexed by contingencies.\n\n\n\n\n\n","category":"method"},{"location":"#FullNetworkSystems.get_must_run-Tuple{SystemDA}","page":"Home","title":"FullNetworkSystems.get_must_run","text":"Returns time series data of flags indicating if the generator must be committed in each hour\n\n\n\n\n\n","category":"method"},{"location":"#FullNetworkSystems.get_off_supplemental_offers-Tuple{System}","page":"Home","title":"FullNetworkSystems.get_off_supplemental_offers","text":"Returns time series data of offer prices for ancillary servives offline supplemental reserves ($ /pu)\n\n\n\n\n\n","category":"method"},{"location":"#FullNetworkSystems.get_offer_curve-Tuple{System}","page":"Home","title":"FullNetworkSystems.get_offer_curve","text":"Returns time series data of the generator offer curves\n\n\n\n\n\n","category":"method"},{"location":"#FullNetworkSystems.get_on_supplemental_offers-Tuple{System}","page":"Home","title":"FullNetworkSystems.get_on_supplemental_offers","text":"Returns time series data of offer prices for ancillary servives online supplemental reserves ($ /pu)\n\n\n\n\n\n","category":"method"},{"location":"#FullNetworkSystems.get_operating_reserve_requirements-Tuple{System}","page":"Home","title":"FullNetworkSystems.get_operating_reserve_requirements","text":"Returns a Dictionary with zonal operating reserve requirements indexed by zone number.\n\n\n\n\n\n","category":"method"},{"location":"#FullNetworkSystems.get_pmax-Tuple{System}","page":"Home","title":"FullNetworkSystems.get_pmax","text":"Returns time series data of maximum generator output (pu)\n\n\n\n\n\n","category":"method"},{"location":"#FullNetworkSystems.get_pmin-Tuple{System}","page":"Home","title":"FullNetworkSystems.get_pmin","text":"Returns time series data of minimum generator output (pu)\n\n\n\n\n\n","category":"method"},{"location":"#FullNetworkSystems.get_price_sensitive_loads-Tuple{SystemDA}","page":"Home","title":"FullNetworkSystems.get_price_sensitive_loads","text":"Returns time series data of price sensitive load bids.\n\n\n\n\n\n","category":"method"},{"location":"#FullNetworkSystems.get_psls_per_bus-Tuple{SystemDA}","page":"Home","title":"FullNetworkSystems.get_psls_per_bus","text":"Returns a Dictionary of price sensitive load bids at each bus.\n\n\n\n\n\n","category":"method"},{"location":"#FullNetworkSystems.get_ptdf-Tuple{System}","page":"Home","title":"FullNetworkSystems.get_ptdf","text":"Returns the power transfer distribution factor of the system.\n\n\n\n\n\n","category":"method"},{"location":"#FullNetworkSystems.get_regulation_commitment-Tuple{SystemRT}","page":"Home","title":"FullNetworkSystems.get_regulation_commitment","text":"Returns time series data of generator regulation commitment status in each hour\n\n\n\n\n\n","category":"method"},{"location":"#FullNetworkSystems.get_regulation_max-Tuple{System}","page":"Home","title":"FullNetworkSystems.get_regulation_max","text":"Returns time series data of maximum generator output in the ancillary services market (pu)\n\n\n\n\n\n","category":"method"},{"location":"#FullNetworkSystems.get_regulation_min-Tuple{System}","page":"Home","title":"FullNetworkSystems.get_regulation_min","text":"Returns time series data of minimum generator output in the ancillary services market (pu)\n\n\n\n\n\n","category":"method"},{"location":"#FullNetworkSystems.get_regulation_offers-Tuple{System}","page":"Home","title":"FullNetworkSystems.get_regulation_offers","text":"Returns time series data of offer prices for ancillary servives regulation reserves ($ /pu)\n\n\n\n\n\n","category":"method"},{"location":"#FullNetworkSystems.get_regulation_requirements-Tuple{System}","page":"Home","title":"FullNetworkSystems.get_regulation_requirements","text":"Returns a Dictionary with zonal regulation requirements indexed by zone number.\n\n\n\n\n\n","category":"method"},{"location":"#FullNetworkSystems.get_spinning_offers-Tuple{System}","page":"Home","title":"FullNetworkSystems.get_spinning_offers","text":"Returns time series data of offer prices for ancillary servives spinning reserves ($ /pu)\n\n\n\n\n\n","category":"method"},{"location":"#FullNetworkSystems.get_transformers-Tuple{System}","page":"Home","title":"FullNetworkSystems.get_transformers","text":"Returns a Dictionary of transformers in the System indexed by name.\n\n\n\n\n\n","category":"method"},{"location":"#FullNetworkSystems.get_virtuals-Tuple{SystemDA}","page":"Home","title":"FullNetworkSystems.get_virtuals","text":"Returns time series data of both increment bids and decrement bids.\n\n\n\n\n\n","category":"method"},{"location":"#FullNetworkSystems.retrieve_ptdf-Tuple{System}","page":"Home","title":"FullNetworkSystems.retrieve_ptdf","text":"Returns the power transfer distribution factor of the system. Calculates it if missing from system\n\n\n\n\n\n","category":"method"}]
}
